{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/taxprofiler/master/nextflow_schema.json",
    "title": "nf-core/taxprofiler pipeline parameters",
    "description": "Taxonomic profiling of shotgun metagenomic data",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "databases", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples and libraries/runs.",
                    "help_text": "You will need to create a design file with information about the samples and libraries/runs you want to running in your pipeline run. Use this parameter to specify its location. It has to be a comma-separated file with 6 columns, and a header row. See [usage docs](https://nf-co.re/taxprofiler/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "databases": {
                    "type": "string",
                    "mimetype": "text/csv",
                    "format": "file-path",
                    "fa_icon": "fas fa-database",
                    "description": "Path to comma-separated file containing information about databases and profiling parameters for each taxonomic profiler",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 4 columns, and a header row. See [usage docs](https://nf-co.re/taxprofiler/dev/usage#full-database-sheet).\n\nProfilers will only be executed if a corresponding  database are supplied. \n\nWe recommend storing this database sheet somewhere centrally and accessible by others members of your lab/institutions, as this file will likely be regularly reused."
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "preprocessing_general_qc_options": {
            "title": "Preprocessing general QC options",
            "type": "object",
            "description": "Common options across both long and short read preprocessing QC steps",
            "default": "",
            "properties": {
                "save_preprocessed_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save reads from adapter clipping/pair-merging, length filtering for both short and long reads",
                    "help_text": "This saves the FASTQ output from the following tools:\n\n- FastP\n- AdapterRemoval\n- PoreChop\n- FiltLong\n\nThese reads will be a mixture of: adapter clipped, quality trimmed, pair-merged, and length filtered, depending on the parameters you set."
                }
            },
            "fa_icon": "fas fa-users-cog"
        },
        "preprocessing_short_read_qc_options": {
            "title": "Preprocessing short-read QC options",
            "type": "object",
            "description": "Options for adapter clipping, quality trimming, pair-merging, and complexity filtering",
            "default": "",
            "properties": {
                "perform_shortread_qc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turns on short read quality control steps (adapter clipping, complexity filtering etc.)",
                    "help_text": ""
                },
                "shortread_qc_tool": {
                    "type": "string",
                    "default": "fastp",
                    "enum": ["fastp", "adapterremoval"],
                    "fa_icon": "fas fa-tools",
                    "description": "Specify which tool to use for read QC"
                },
                "shortread_qc_skipadaptertrim": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip adapter trimming"
                },
                "shortread_qc_adapter1": {
                    "type": "string",
                    "default": "None",
                    "fa_icon": "fas fa-grip-lines",
                    "description": "Specify adapter 1 nucleotide sequence"
                },
                "shortread_qc_adapter2": {
                    "type": "string",
                    "default": "None",
                    "fa_icon": "fas fa-grip-lines",
                    "description": "Specify adapter 2 nucleotide sequence"
                },
                "shortread_qc_mergepairs": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on merging of read pairs for paired-end data"
                },
                "shortread_qc_excludeunmerged": {
                    "type": "boolean",
                    "fa_icon": "far fa-times-circle",
                    "description": "Discard unmerged reads from paired-end merging"
                },
                "shortread_qc_minlength": {
                    "type": "integer",
                    "default": 15,
                    "fa_icon": "fas fa-ruler-horizontal",
                    "description": "Specify the minimum length of reads to be retained"
                },
                "perform_shortread_complexityfilter": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turns on nucleotide sequence complexity filtering"
                },
                "shortread_complexityfilter_tool": {
                    "type": "string",
                    "default": "bbduk",
                    "enum": ["bbduk", "prinseqplusplus", "fastp"],
                    "fa_icon": "fas fa-hammer",
                    "description": "Specify which tool to use for complexity filtering"
                },
                "shortread_complexityfilter_entropy": {
                    "type": "number",
                    "default": 0.3,
                    "fa_icon": "fas fa-random",
                    "description": "Specify the minimum sequence entropy level for complexity filtering"
                },
                "shortread_complexityfilter_bbduk_windowsize": {
                    "type": "integer",
                    "default": 50,
                    "fa_icon": "far fa-window-maximize",
                    "description": "Specify the window size for BBDuk complexity filtering"
                },
                "shortread_complexityfilter_bbduk_mask": {
                    "type": "boolean",
                    "fa_icon": "fas fa-mask",
                    "description": "Turn on masking rather than discarding of low complexity reads for BBduk"
                },
                "shortread_complexityfilter_fastp_threshold": {
                    "type": "integer",
                    "default": 30,
                    "fa_icon": "fas fa-sort-numeric-down",
                    "description": "Specify the minimum complexity filter threshold of Fastp"
                },
                "shortread_complexityfilter_prinseqplusplus_mode": {
                    "type": "string",
                    "default": "entropy",
                    "enum": ["entropy", "dust"],
                    "fa_icon": "fas fa-check-square",
                    "description": "Specify the complexity filter mode for PRINSEQ++"
                },
                "shortread_complexityfilter_prinseqplusplus_dustscore": {
                    "type": "number",
                    "default": 0.5,
                    "fa_icon": "fas fa-head-side-mask",
                    "description": "Specify the minimum dust score for PRINTSEQ++ complexity filtering"
                },
                "save_complexityfiltered_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save complexity filtered short-reads"
                }
            },
            "fa_icon": "fas fa-compress-alt"
        },
        "preprocessing_long_read_qc_options": {
            "title": "Preprocessing long-read QC options",
            "type": "object",
            "description": "Options for adapter clipping, quality trimming, and length filtering",
            "default": "",
            "properties": {
                "perform_longread_qc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turns on long read quality control steps (adapter clipping, length filtering etc.)"
                },
                "longread_qc_skipadaptertrim": {
                    "type": "boolean",
                    "description": "Skip long-read trimming",
                    "fa_icon": "fas fa-forward"
                },
                "longread_qc_skipqualityfilter": {
                    "type": "boolean",
                    "description": "Skip long-read length and quality filtering",
                    "fa_icon": "fas fa-forward"
                },
                "longread_qc_qualityfilter_minlength": {
                    "type": "integer",
                    "default": 1000,
                    "description": "Specify the minimum length of reads to be retained",
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "longread_qc_qualityfilter_keeppercent": {
                    "type": "integer",
                    "default": 90,
                    "description": "Specify the percent of high-quality reads to be retained",
                    "fa_icon": "fas fa-percentage"
                },
                "longread_qc_qualityfilter_targetbases": {
                    "type": "integer",
                    "default": 500000000,
                    "description": "Specify the minimum number of high-quality bases in the library to be retained",
                    "fa_icon": "fas fa-bullseye"
                }
            },
            "fa_icon": "fas fa-expand-alt"
        },
        "preprocessing_host_removal_options": {
            "title": "Preprocessing host removal options",
            "type": "object",
            "description": "Options for pre-profiling host read removal",
            "default": "",
            "properties": {
                "perform_shortread_hostremoval": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on short-read host removal"
                },
                "perform_longread_hostremoval": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on long-read host removal"
                },
                "hostremoval_reference": {
                    "type": "string",
                    "default": "None",
                    "fa_icon": "fas fa-file-alt",
                    "description": "Specify path to single reference FASTA of host(s) genome(s)"
                },
                "shortread_hostremoval_index": {
                    "type": "string",
                    "default": "None",
                    "fa_icon": "fas fa-address-book",
                    "description": "Specify path to the directory containing pre-made BowTie2 indexes of the host removal reference"
                },
                "longread_hostremoval_index": {
                    "type": "string",
                    "default": "None",
                    "fa_icon": "fas fa-address-book",
                    "description": "Specify path to the directory containing pre-made Minimap2 indexes of the host removal reference"
                },
                "save_hostremoval_index": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save mapping index of input reference when not already supplied by user"
                },
                "save_hostremoval_mapped": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save mapped reads in BAM format from host removal"
                },
                "save_hostremoval_unmapped": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save unmapped reads in FASTQ format from host removal"
                }
            },
            "fa_icon": "fas fa-user-times"
        },
        "preprocessing_run_merging_options": {
            "title": "Preprocessing run merging options",
            "type": "object",
            "description": "Options for per-sample run-merging",
            "default": "",
            "properties": {
                "perform_runmerging": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on run merging"
                },
                "save_runmerged_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save run-concatenated input FASTQ files for each sample"
                }
            },
            "fa_icon": "fas fa-clipboard-check"
        },
        "profiling_options": {
            "title": "Profiling options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "run_centrifuge": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on profiling with Centrifuge. Requires database to be present CSV file passed to --databases"
                },
                "centrifuge_save_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on saving of Centrifuge-aligned reads"
                },
                "run_diamond": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on profiling with DIAMOND. Requires database to be present CSV file passed to --databases"
                },
                "diamond_output_format": {
                    "type": "string",
                    "default": "tsv",
                    "enum": ["blast", "xml", "txt", "daa", "sam", "tsv", "paf"],
                    "fa_icon": "fas fa-file",
                    "description": "Specify output format from DIAMOND profiling."
                },
                "diamond_save_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on saving of DIAMOND-aligned reads. Will override --diamond_output_format and no taxon tables will be generated"
                },
                "run_kaiju": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on profiling with Kaiju. Requires database to be present CSV file passed to --databases"
                },
                "kaiju_taxon_rank": {
                    "type": "string",
                    "default": "species",
                    "enum": ["phylum", "class", "order", "family", "genus", "species"],
                    "fa_icon": "fas fa-tag",
                    "description": "Specify taxonomic rank to be displayed in Kaiju taxon table"
                },
                "run_kraken2": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on profiling with Kraken2. Requires database to be present CSV file passed to --databases"
                },
                "kraken2_save_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on saving of Kraken2-aligned reads"
                },
                "kraken2_save_readclassification": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on saving of Kraken2 per-read taxonomic assignment file"
                },
                "run_malt": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on profiling with MALT. Requires database to be present CSV file passed to --databases"
                },
                "malt_mode": {
                    "type": "string",
                    "default": "BlastN",
                    "fa_icon": "fas fa-check-square",
                    "description": "Specify which MALT alignment mode to use"
                },
                "malt_save_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on saving of MALT-aligned reads"
                },
                "malt_generate_megansummary": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on generation of MEGAN summary file from MALT results"
                },
                "run_metaphlan3": {
                    "type": "boolean",
                    "description": "Turn on profiling with MetaPhlAn3. Requires database to be present CSV file passed to --databases",
                    "fa_icon": "fas fa-toggle-on"
                },
                "run_motus": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on profiling with mOTUs. Requires database to be present CSV file passed to --databases"
                }
            },
            "fa_icon": "fas fa-align-center"
        },
        "postprocessing_and_visualisation_options": {
            "title": "Postprocessing and visualisation options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "run_profile_standardisation": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on standardisation of taxon tables across profilers"
                },
                "generate_biom_output": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on generation of BIOM output (currently only applies to mOTUs)"
                },
                "run_krona": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on generation of Krona plots for supported profilers"
                },
                "krona_taxonomy_directory": {
                    "type": "string",
                    "default": "None",
                    "fa_icon": "fas fa-folder-open",
                    "description": "Specify path to krona taxonomy directories (required for MALT krona plots)"
                }
            },
            "fa_icon": "fas fa-chart-line"
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "enable_conda": {
                    "type": "boolean",
                    "description": "Run this workflow with Conda. You can also use '-profile conda' instead of providing this parameter.",
                    "hidden": true,
                    "fa_icon": "fas fa-bacon"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details.",
                    "hidden": true
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/preprocessing_general_qc_options"
        },
        {
            "$ref": "#/definitions/preprocessing_short_read_qc_options"
        },
        {
            "$ref": "#/definitions/preprocessing_long_read_qc_options"
        },
        {
            "$ref": "#/definitions/preprocessing_host_removal_options"
        },
        {
            "$ref": "#/definitions/preprocessing_run_merging_options"
        },
        {
            "$ref": "#/definitions/profiling_options"
        },
        {
            "$ref": "#/definitions/postprocessing_and_visualisation_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        }
    ]
}
